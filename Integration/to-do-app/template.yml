AWSTemplateFormatVersion: 2010-09-09
Description: To-do list application integration with DeveloperTheory (CodeCommmit, CodeBuil, CodeDeploy) and deploy to EB
Parameters:
  AppName:
    Description: Application
    Type: String
    Default: TodolistApplication
  EBEnvironmentName:
    Description: Environment Name
    Type: String
    Default: NodeJsEnviroment
Resources: 
  TodoListBuilderPermission:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: hta-cloudformation-codecommit
          PolicyDocument: 
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 
                  - 'codecommit:*'
                Resource:
                  - '*'
        - PolicyName: hta-cloudformation-cloudwatch
          PolicyDocument: 
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 
                  - 'logs:*'
                Resource:
                  - '*'
  CodeDeployServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWS-CodeDeploy-Service
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ec2:*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 's3:*'
                Resource: '*'
  TodoAppRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: TodoListApplication
      RepositoryDescription: NodeJs To-do list application
      Code:
        S3:
          Bucket: hta-cloudformation-bucket
          Key: integration/to-do-app.zip
  TodoAppBuilder:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - TodoAppRepository
    Properties:
      ServiceRole: !Ref TodoListBuilderPermission
      Artifacts: 
        Type: 'NO_ARTIFACTS'
      Source:
        Type: 'CODECOMMIT'
        BuildSpec: 'buildspec_nodejs.yml'
        Location: !Sub 'https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/${TodoAppRepository.Name}'
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0

  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ComputePlatform: Server
      ApplicationName: !Ref AppName
  CodeDeployConfigurationGroup:
    Type: AWS::CodeDeploy::DeploymentConfig
    Properties: 
      DeploymentConfigName: HTADeployConfigurationGroup 
      MinimumHealthyHosts: 
        Type: "FLEET_PERCENT"
        Value: 75

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: AWS-CodePipeline-Service-3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - devicefarm:ListProjects
                  - devicefarm:ListDevicePools
                  - devicefarm:GetRun
                  - devicefarm:GetUpload
                  - devicefarm:CreateUpload
                  - devicefarm:ScheduleRun
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - lambda:InvokeFunction
                  - lambda:ListFunctions
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - iam:PassRole
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                Resource: '*'
  CodePipelineArtifactStoreBucket:
    Type: AWS::S3::Bucket
  AppPipeline: 
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      Name: ecr-events-pipeline
      RoleArn: 
        !GetAtt CodePipelineServiceRole.Arn
      Stages: 
        - 
          Name: Source
          Actions: 
            - 
              Name: SourceAction
              ActionTypeId: 
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts: 
                - Name: SourceOutput
              Configuration: 
                RepositoryName: !GetAtt TodoAppRepository.Name
                BranchName: master
                PollForSourceChanges: True
              RunOrder: 1
        - 
          Name: Build
          Actions: 
            - 
              Name: BuildAction
              InputArtifacts: 
                - Name: SourceOutput
              ActionTypeId: 
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration: 
                ProjectName: !Ref TodoAppBuilder
              RunOrder: 2
        - 
          Name: Deploy
          Actions: 
            - 
              Name: DeployAction
              ActionTypeId: 
                Category: Deploy
                Owner: AWS 
                Version: '1'
                Provider: ElasticBeanstalk
              Configuration: 
                ApplicationName: !Ref EBNodeJsApplication
                EnvironmentName: !Ref EBEnvironment
              RunOrder: 3
              InputArtifacts: 
                - Name: SourceOutput
      ArtifactStore: 
        Type: S3
        Location: !Ref CodePipelineArtifactStoreBucket

  EBNodeJsApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      Description: AWS Elastic Beanstalk Nodejs Application
  EBNodeJsApplicationVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName:
        !Ref EBNodeJsApplication
      Description: AWS ElasticBeanstalk Nodejs Application Version
      SourceBundle:
        S3Bucket: hta-cloudformation-bucket
        S3Key: integration/to-do-app.zip
  EBConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName: !Ref EBNodeJsApplication
      Description: AWS ElasticBeanstalk Nodejs Configuration Template
      OptionSettings:
      - Namespace: aws:elasticbeanstalk:cloudwatch:logs
        OptionName: StreamLogs
        Value: 'true'
      - Namespace: aws:elasticbeanstalk:cloudwatch:logs
        OptionName: DeleteOnTerminate
        Value: 'false'
      - Namespace: aws:autoscaling:asg
        OptionName: MinSize
        Value: '2'
      - Namespace: aws:autoscaling:asg
        OptionName: MaxSize
        Value: '6'
      - Namespace: aws:elasticbeanstalk:environment:process:default
        OptionName: StickinessEnabled
        Value: 'true'
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: EnvironmentType
        Value: LoadBalanced
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: LoadBalancerType
        Value: application
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: IamInstanceProfile
        Value: aws-elasticbeanstalk-ec2-role
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: EC2KeyName
        Value: cfn-key
      SolutionStackName: 64bit Amazon Linux 2 v3.0.3 running Python 3.7
  EBEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties: 
      ApplicationName: !Ref EBNodeJsApplication
      Description: AWS Elastic Beanstalk Environment running Nodejs Application
      EnvironmentName: !Ref EBEnvironmentName
      TemplateName: !Ref EBConfigurationTemplate
      VersionLabel: !Ref EBNodeJsApplicationVersion