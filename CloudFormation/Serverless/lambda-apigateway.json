{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "To use this template or create a function,you need a deployment package and an execution role (which is xray,lambda, API gateway). The deployment package contains your function code",
    "Metadata": {},
    "Parameters": {
        "apiGatewayStageName": {
            "Type": "String",
            "AllowedPattern": "^[a-z0-9]+$",
            "Default": "htatest"
        }
    },
    "Mappings": {},
    "Conditions": {},
    "Resources": {
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "hta-cloudformation-lambda",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:*"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "hta-cloudformation-xray",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "xray:*"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "hta-cloudformation-logs",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:DescribeLogGroups",
                                        "logs:DescribeLogStreams",
                                        "logs:PutLogEvents",
                                        "logs:GetLogEvents",
                                        "logs:FilterLogEvents"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "HelloWorldLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "app.lambdaHandler",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "S3Bucket": "hta-cloudformation-bucket",
                    "S3Key": "serverless/lambda-code/lambda-code.zip"
                },
                "Runtime": "nodejs12.x",
                "Timeout": 25,
                "TracingConfig": {
                    "Mode": "Active"
                }
            }
        },
        "ApiGateway": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "my-apigateway",
                "Description": "simple apigateway"
            }
        },
        "ApiGatewayDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "ApiGateway"
                },
                "StageName": ""
            },
            "DependsOn": [
                "GetWelcomeMessage"
            ]
        },
        "ApiGatewayStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {
                    "Ref": "ApiGatewayDeployment"
                },
                "Description": {
                    "Fn::Sub": "Lambda API Staage name: ${apiGatewayStageName}"
                },
                "StageName": {
                    "Ref": "apiGatewayStageName"
                },
                "TracingEnabled": true,
                "RestApiId": {
                    "Ref": "ApiGateway"
                }
            }
        },
        "GetWelcomeMessage": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "AuthorizationType": "NONE",
                "ApiKeyRequired": false,
                "RestApiId": {
                    "Ref": "ApiGateway"
                },
                "ResourceId": {
                    "Fn::GetAtt": [
                        "ApiGateway",
                        "RootResourceId"
                    ]
                },
                "Integration": {
                    "Type": "AWS",
                    "ConnectionType": "INTERNET",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "HelloWorldLambda",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200"
                        }
                    ]
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200"
                    }
                ]
            }
        },
        "LambdaApiGatewayInvoke": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "HelloWorldLambda",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGateway"
                            },
                            "/*/GET/"
                        ]
                    ]
                }
            }
        }
    },
    "Outputs": {
        "apiGatewayInvokeURL": {
            "Value": {
                "Fn::Sub": "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${apiGatewayStageName}"
            }
        }
    }
}