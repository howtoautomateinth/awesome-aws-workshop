AWSTemplateFormatVersion: 2010-09-09
Description: Simple repository on cloud
Resources:
  MyBuilderPermission:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: hta-cloudformation-codecommit
          PolicyDocument: 
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 
                  - 'codecommit:*'
                Resource:
                  - '*'
        - PolicyName: hta-cloudformation-cloudwatch
          PolicyDocument: 
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 
                  - 'logs:*'
                Resource:
                  - '*'
        - PolicyName: hta-cloudformation-s3
          PolicyDocument: 
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 
                  - 's3:*'
                Resource:
                  - '*'
        - PolicyName: hta-cloudformation-ecr
          PolicyDocument: 
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 
                  - 'ecr:*'
                Resource:
                  - '*'
  MySimpleRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: MySimpleRepo
      RepositoryDescription: Simpleest Repository with Cfn
      Code:
        S3:
          Bucket: hta-cloudformation-bucket
          Key: DeveloperTheory/Revision/DockerCode.zip
  MyECRRepository: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: 'simple-docker-repository'
      RepositoryPolicyText: 
        Version: '2012-10-17'
        Statement: 
          - 
            Sid: AllowPushPull
            Effect: Allow
            Principal: '*'
            Action: 
              - "ecr:*"
  MyBuilder:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - MySimpleRepo
    Properties:
      ServiceRole: !Ref MyBuilderPermission
      Artifacts: 
        Type: 'NO_ARTIFACTS'
      Source:
        Type: 'CODECOMMIT'
        BuildSpec: 'buildspec_docker.yml'
        GitCloneDepth: 1
        Location: !Sub 'https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/${MySimpleRepo.Name}'
      Environment:
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: 'IMAGE_REPO_NAME'
            Type: 'PLAINTEXT'
            Value: !Ref MyECRRepository
          - Name: 'IMAGE_TAG'
            Type: 'PLAINTEXT'
            Value: 'latest'
          - Name: 'AWS_ACCOUNT_ID'
            Type: 'PLAINTEXT'
            Value: !Sub ${AWS::AccountId}
          - Name: 'AWS_DEFAULT_REGION'
            Type: 'PLAINTEXT'
            Value: !Sub ${AWS::Region}
  CodePipelineArtifactStoreBucket:
    Type: AWS::S3::Bucket
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: AWS-CodePipeline-Service-3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - devicefarm:ListProjects
                  - devicefarm:ListDevicePools
                  - devicefarm:GetRun
                  - devicefarm:GetUpload
                  - devicefarm:CreateUpload
                  - devicefarm:ScheduleRun
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - lambda:InvokeFunction
                  - lambda:ListFunctions
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - iam:PassRole
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                Resource: '*'
  AppPipeline: 
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      Name: ecr-events-pipeline
      RoleArn: 
        !GetAtt CodePipelineServiceRole.Arn
      Stages: 
        - 
          Name: Source
          Actions: 
            - 
              Name: SourceAction
              ActionTypeId: 
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts: 
                - Name: SourceOutput
              Configuration: 
                RepositoryName: !GetAtt MySimpleRepo.Name
                BranchName: master
                PollForSourceChanges: True
              RunOrder: 1
        - 
          Name: Build
          Actions: 
            - 
              Name: BuildAction
              InputArtifacts: 
                - Name: SourceOutput
              ActionTypeId: 
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration: 
                ProjectName: !Ref MyBuilder
              RunOrder: 2
      ArtifactStore: 
        Type: S3
        Location: !Ref CodePipelineArtifactStoreBucket